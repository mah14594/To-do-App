{"version":3,"file":"static/js/423.0eeefc24.chunk.js","mappings":"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","sources":["Components/Hooks/use-input.js","Components/UI/Form.js","webpack://react-complete-guide/./src/Components/Icons/Icons.module.css?58d0","Components/Icons/TrashIcon.js","Components/Icons/CheckIcon.js","webpack://react-complete-guide/./src/Components/Tasks/Task.module.css?0408","Components/Tasks/Task.js","Components/Tasks/TodoTasks.js","Components/Tasks/DoneTasks.js","Pages/Main.js","webpack://react-complete-guide/./src/Components/UI/Form.module.css?c62c"],"sourcesContent":["import { useState } from \"react\";\nconst useInput = (CheckValid) => {\n  const [enteredvalue, setenteredvalue] = useState(\"\");\n  const [istouched, setistouched] = useState(false);\n  const valueisvalid = CheckValid(enteredvalue);\n  const changeinput = (event) => {\n    setistouched(true);\n    setenteredvalue(event.target.value);\n  };\n  const blurhandler = (event) => {\n    setistouched(true);\n  };\n  const reset = () => {\n    setenteredvalue(\"\");\n    setistouched(false);\n  };\n  return {\n    value: enteredvalue,\n    valueisvalid,\n    istouched,\n    reset,\n    changeinput,\n    blurhandler,\n  };\n};\nexport default useInput;\n","import React from \"react\";\nimport classes from \"./Form.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { TasksActions } from \"../Store\";\nimport useInput from \"../Hooks/use-input\";\nexport default function Form() {\n  const { value, valueisvalid, reset, changeinput, blurhandler } = useInput(\n    (value) => value.trim().length > 0\n  );\n\n  const Dispatch = useDispatch();\n  const AddnewTaskHandler = () => {\n    Dispatch(\n      TasksActions.AddnewTask({\n        title: value,\n        id: Math.random(),\n      })\n    );\n    reset();\n  };\n  return (\n    <div className=\"input-group mb-3 mt-2 p-3 p-md-5\">\n      <input\n        type=\"search\"\n        className=\" form-control shadow-none\"\n        placeholder=\"Add a Task\"\n        onChange={changeinput}\n        value={value}\n        onBlur={blurhandler}\n      />\n      <button\n        className={`btn px-md-5 ${classes.userbutton}`}\n        type=\"Button\"\n        disabled={!valueisvalid}\n        onClick={AddnewTaskHandler}\n      >\n        Add New Task\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"icons\":\"Icons_icons__CO2xE\"};","import React from \"react\";\nimport classes from \"./Icons.module.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nexport default function TrashIcon(props) {\n  return (\n    <FontAwesomeIcon\n      className={classes.icons}\n      icon={faTrash}\n      onClick={props.onClick}\n    />\n  );\n}\n","import React from \"react\";\nimport classes from \"./Icons.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nexport default function CheckIcon(props) {\n  return (\n    <FontAwesomeIcon\n      className={classes.icons}\n      icon={faCheck}\n      onClick={props.onClick}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"not-completed-task\":\"Task_not-completed-task__0hGOL\",\"completed-task\":\"Task_completed-task__--g9L\",\"counter\":\"Task_counter__WYOF8\"};","import React from \"react\";\nimport TrashIcon from \"../Icons/TrashIcon\";\nimport CheckIcon from \"../Icons/CheckIcon\";\nimport classes from \"./Task.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TasksActions } from \"../Store\";\n\nexport default function Task(props) {\n  const TodoTasks = useSelector((state) => state.TasksReducer.TodoTasks);\n  const Dispatch = useDispatch();\n  const task = TodoTasks.find((item) => {\n    return item.id === props.id;\n  });\n\n  const AddtoCompleteHandler = () => {\n    Dispatch(TasksActions.AddDoneTask(task));\n  };\n  let checkicon = <CheckIcon onClick={AddtoCompleteHandler}></CheckIcon>;\n  let style = classes[\"not-completed-task\"];\n  if (props.iscompleted === \"true\") {\n    checkicon = \"\";\n    style = classes[\"completed-task\"];\n  }\n  const RemoveTaskHandler = () => {\n    Dispatch(TasksActions.RemoveTask(props.id));\n  };\n  return (\n    <ol className={`col-12 col-md-8 ${style}`}>\n      <span className={classes.counter}>{props.counter}</span>\n      <li>{props.title}</li>\n      <div>\n        {checkicon}\n        <TrashIcon onClick={RemoveTaskHandler}></TrashIcon>\n      </div>\n    </ol>\n  );\n}\n","import React from \"react\";\nimport Task from \"./Task\";\nimport { useSelector } from \"react-redux\";\n\nexport default function TodoTasks() {\n  const TodoTasksList = useSelector((state) => state.TasksReducer.TodoTasks);\n  let content = (\n    <h5 className=\"col-12 text-center text-danger\">No Tasks Yet!</h5>\n  );\n  if (TodoTasksList.length > 0) {\n    content = TodoTasksList.map((task, index) => (\n      <Task\n        key={task.id}\n        id={task.id}\n        title={task.title}\n        iscompleted=\"false\"\n        counter={index + 1}\n      />\n    ));\n  }\n\n  return (\n    <div>\n      <h1 className=\"text-center mt-5 mb-3\"> To Do Tasks </h1>\n      <div>{content}</div>\n    </div>\n  );\n}\n","import Task from \"./Task\";\nimport { useSelector } from \"react-redux\";\nexport default function TodoTasks() {\n  const DoneTasksList = useSelector((state) => state.TasksReducer.DoneTasks);\n  let content = (\n    <h5 className=\"col-12 text-center text-danger\">No Tasks Yet!</h5>\n  );\n\n  if (DoneTasksList.length > 0) {\n    content = DoneTasksList.map((task, index) => (\n      <Task\n        key={task.id}\n        id={task.id}\n        title={task.title}\n        iscompleted=\"true\"\n        counter={index + 1}\n      />\n    ));\n  }\n  return (\n    <div>\n      <h1 className=\"text-center mt-5 mb-3\">Completed Tasks</h1>\n      <div>{content}</div>\n    </div>\n  );\n}\n","import React, { Fragment, useEffect } from \"react\";\nimport Form from \"../Components/UI/Form\";\nimport TodoTasks from \"../Components/Tasks/TodoTasks\";\nimport DoneTasks from \"../Components/Tasks/DoneTasks\";\nimport { SendTasks, FetchTasks } from \"../Components/Store/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nlet isInitial = true;\n\nexport default function Main() {\n  const params = useParams();\n  const ID = params.Id;\n  const dispatch = useDispatch();\n  const TodoTasksList = useSelector((state) => state.TasksReducer.TodoTasks);\n  const DoneTasksList = useSelector((state) => state.TasksReducer.DoneTasks);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(SendTasks(TodoTasksList, \"TodoTasks\", ID));\n    dispatch(SendTasks(DoneTasksList, \"DoneTasks\", ID));\n  }, [TodoTasksList, DoneTasksList, dispatch, ID]);\n  useEffect(() => {\n    dispatch(FetchTasks(ID));\n  }, [dispatch, ID]);\n\n  return (\n    <Fragment>\n      <Form />\n      <TodoTasks />\n      <DoneTasks />\n    </Fragment>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"userbutton\":\"Form_userbutton__7X-k4\",\"userinput\":\"Form_userinput__N6k4f\"};"],"names":["CheckValid","useState","enteredvalue","setenteredvalue","istouched","setistouched","value","valueisvalid","reset","changeinput","event","target","blurhandler","Form","useInput","trim","length","Dispatch","useDispatch","className","type","placeholder","onChange","onBlur","classes","disabled","onClick","TasksActions","title","id","Math","random","TrashIcon","props","icon","faTrash","CheckIcon","faCheck","Task","TodoTasks","useSelector","state","TasksReducer","task","find","item","checkicon","style","iscompleted","counter","TodoTasksList","content","map","index","DoneTasksList","DoneTasks","isInitial","Main","ID","useParams","Id","dispatch","useEffect","SendTasks","FetchTasks","Fragment"],"sourceRoot":""}